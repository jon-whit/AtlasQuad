# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN = /usr/local/gcc-arm-none-eabi-5_2-2015q4/bin/
PROJECT = AtlasQuad
OBJECTS = ./main.o ./ITG3200/ITG3200.o ./ADXL345/ADXL345.o 
SYS_OBJECTS = ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_smartcard.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/board.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/cmsis_nvic.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/hal_tick.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/mbed_overrides.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/retarget.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/startup_stm32f072xb.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_adc.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_adc_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_can.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_cec.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_comp.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_cortex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_crc.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_crc_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_dac.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_dac_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_dma.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_flash.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_flash_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_gpio.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_i2c.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_i2c_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_i2s.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_irda.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_iwdg.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_pcd.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_pcd_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_pwr.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_pwr_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_rcc.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_rcc_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_rtc.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_rtc_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_smartcard_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_smbus.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_spi.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_spi_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_tim.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_tim_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_tsc.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_uart.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_uart_ex.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_usart.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/stm32f0xx_hal_wwdg.o ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/system_stm32f0xx.o 
INCLUDE_PATHS = -I. -I./ITG3200 -I./ADXL345 -I./mbed -I./mbed/TARGET_NUCLEO_F072RB -I./mbed/TARGET_NUCLEO_F072RB/TARGET_STM -I./mbed/TARGET_NUCLEO_F072RB/TARGET_STM/TARGET_STM32F0 -I./mbed/TARGET_NUCLEO_F072RB/TARGET_STM/TARGET_STM32F0/TARGET_NUCLEO_F072RB -I./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM 
LIBRARY_PATHS = -L./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM 
LIBRARIES = -lmbed 
LINKER_SCRIPT = ./mbed/TARGET_NUCLEO_F072RB/TOOLCHAIN_GCC_ARM/STM32F072XB.ld

############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE    = $(GCC_BIN)arm-none-eabi-size 


CPU = -mcpu=cortex-m0 -mthumb 
CC_FLAGS = $(CPU) -c -g -fno-common -fmessage-length=0 -Wall -Wextra -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer -MMD -MP
CC_SYMBOLS = -D__CORTEX_M0 -DTARGET_NUCLEO_F072RB -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -DMBED_BUILD_TIMESTAMP=1458783911.19 -DTARGET_FF_MORPHO -DTARGET_CORTEX_M -DTARGET_LIKE_MBED -DTARGET_FF_ARDUINO -DARM_MATH_CM0 -D__MBED__=1 -DTARGET_STM -DTARGET_STM32F0 -DTARGET_M0 -DTARGET_STM32F072RB -DTARGET_LIKE_CORTEX_M0 

LD_FLAGS = $(CPU) -Wl,--gc-sections --specs=nano.specs -Wl,--wrap,main -Wl,-Map=$(PROJECT).map,--cref
#LD_FLAGS += -u _printf_float -u _scanf_float
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys


ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -O0
else
  CC_FLAGS += -DNDEBUG -Os
endif

.PHONY: all clean lst size

all: $(PROJECT).bin $(PROJECT).hex size


clean:
	rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS)


.asm.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.s.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.S.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++98 -fno-rtti $(INCLUDE_PATHS) -o $@ $<



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)


